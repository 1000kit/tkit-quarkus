include:
  - project: '1000kit/infra/ci/common'
    ref: v2
    file: release.yml

variables:
  MVN_BUILD_IMAGE: harbor.1000kit.org/1000kit/mvn-build:v3.8
  GIT_RESOURCE_URL: https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.com/1000kit/config/gitlab-ci-template.git
  MAVEN_CLI_OPTS: "-s .scripts/.m2/gitlab-ci-maven-lib.xml --batch-mode"
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true -XX:+TieredCompilation -XX:TieredStopAtLevel=1"

cache:
  paths:
    - .m2/repository/

# Build pipeline stages
stages:
  - build
  - release

.mvn_config:
  image: $MVN_BUILD_IMAGE
  tags:
    - aws
  cache:
    key: ${CI_PROJECT_PATH_SLUG}
    paths:
      - .m2/repository/
  artifacts:
    name: "$CI_COMMIT_REF_SLUG"
    expire_in: 1 hrs
    paths:
      - pom.xml
      - target
    reports:
      junit:
        - target/surefire-reports/TEST-*.xml

mvn:build:
  extends:
    - .mvn_config
  stage: build
  services:
    - docker:19.03.8-dind
  before_script:
    - git clone $GIT_RESOURCE_URL .scripts
  script:
    - VERSION=$(samo project version)
    - mvn versions:set -DnewVersion=$VERSION
    - mvn $MAVEN_CLI_OPTS -B -Pnative impsort:check formatter:validate verify --file pom.xml
  rules:
    - if: '$CI_COMMIT_TAG == null'
      when: on_success

mvn:deploy:
  extends:
    - .mvn_config
  stage: release
  before_script:
    - git clone $GIT_RESOURCE_URL .scripts
    - echo "$GPG_KEY_SECRET" | gpg --batch --import --passphrase "$GPG_PASSPHRASE" -
    - gpg --list-keys
  script:
    - VERSION=$(samo project version --version release)
    - mvn versions:set -DnewVersion=$VERSION
    - mvn $MAVEN_CLI_OPTS clean deploy -DskipTests -Dmaven.test.skip=true -Prelease
  rules:
    - if: $CI_COMMIT_TAG
      when: on_success

changelog:release:
  dependencies:
    - mvn:deploy
