services:
  autoheal:
    image: willfarrell/autoheal
    environment:
      - AUTOHEAL_CONTAINER_LABEL=all
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  app:
    image: tkit-quarkus-it-oidc-health:999-SNAPSHOT
    ports:
      - "8080:8080"
    environment:
      QUARKUS_OIDC_RESOLVE_TENANTS_WITH_ISSUER: true
      QUARKUS_OIDC_AUTH_SERVER_URL: http://keycloak-private:8080/realms/onecx
      QUARKUS_OIDC_KC0_AUTH_SERVER_URL: http://keycloak-private:8080/realms/onecx
      QUARKUS_OIDC_KC1_AUTH_SERVER_URL: http://keycloak-public:8080/realms/onecx
    healthcheck:
      test: curl --head -fsS http://localhost:8080/q/health
      interval: 2s
      timeout: 2s
      retries: 2
      start_period: 12s
    networks:
      - example
  postgres:
    image: docker.io/library/postgres:13.4
    command: [-cmax_prepared_transactions=100]
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: admin
      # POSTGRES_DB: postgres
      # POSTGRES_USER: postgres
    volumes:
      - ./dc/db:/docker-entrypoint-initdb.d/
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - example

  keycloak-private:
    image: quay.io/keycloak/keycloak:23.0.4
    command: "start-dev --import-realm"
    ports:
      - "8083:8080"
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_POOL_INITIAL_SIZE : 1
      KC_DB_POOL_MAX_SIZE : 5
      KC_DB_POOL_MIN_SIZE : 2
      KC_DB_URL_DATABASE: keycloak
      KC_DB_URL_HOST: postgres
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      KC_HOSTNAME: keycloak-app
      KC_HOSTNAME_STRICT: false
      KC_HTTP_ENABLED: true
      KC_HTTP_PORT: 8080
      KC_HEALTH_ENABLED: true
    volumes:
      - ./dc/keycloak/imports:/opt/keycloak/data/import
    healthcheck:
      test: "{ printf >&3 'GET /realms/onecx/.well-known/openid-configuration HTTP/1.0\r\nHost: localhost\r\n\r\n'; cat <&3; } 3<>/dev/tcp/localhost/8080 | head -1 | grep 200"
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - example

  keycloak-public:
    image: quay.io/keycloak/keycloak:23.0.4
    command: "start-dev --import-realm"
    ports:
      - "8084:8080"
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_POOL_INITIAL_SIZE : 1
      KC_DB_POOL_MAX_SIZE : 5
      KC_DB_POOL_MIN_SIZE : 2
      KC_DB_URL_DATABASE: keycloak_public
      KC_DB_URL_HOST: postgres
      KC_DB_USERNAME: keycloak_public
      KC_DB_PASSWORD: keycloak_public
      KC_HOSTNAME: keycloak-public
      KC_HOSTNAME_STRICT: false
      KC_HTTP_ENABLED: true
      KC_HTTP_PORT: 8080
      KC_HEALTH_ENABLED: true
    volumes:
      - ./dc/keycloak/imports:/opt/keycloak/data/import
    healthcheck:
      test: "{ printf >&3 'GET /realms/onecx/.well-known/openid-configuration HTTP/1.0\r\nHost: localhost\r\n\r\n'; cat <&3; } 3<>/dev/tcp/localhost/8080 | head -1 | grep 200"
      interval: 15s
      timeout: 10s
      retries: 3
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - example

networks:
  example:
